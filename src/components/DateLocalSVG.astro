---
/*
 * (C) Copyright 2023 Miles Pernicious
 *
 * SPDX-License-Identifier: MIT
 */

import { SiteConfig } from '@config';

export interface Props extends SVGTextElement {
	date: Date,
	timeZone?: string,
	year?: 'numeric' | '2-digit',
	month?: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',
	day?: 'numeric' | '2-digit',
	weekday?: 'narrow' | 'short' | 'long',
	hour?: 'numeric' | '2-digit',
	minute?: 'numeric' | '2-digit',
	hour12?: 'true' | 'false',
};

const { date, timeZone = SiteConfig.timezone, year, month, day, weekday, hour, minute, hour12, ...attrs } = Astro.props;

const options = {
	timeZone: timeZone,
	year: year,
	month: month,
	day: day,
	weekday: weekday,
	hour: hour,
	minute: minute,
	hour12: hour12
};

const formatter = new Intl.DateTimeFormat('en-US', options);

// Pre-format the date
const formatted = formatter.format(date);

// If we weren't given a time zone, we will use the runtime client's
// Set data-timeconvert and we'll iterate to make sure we do so.
const dataTimeConvert = Astro.props['timeZone'] === undefined;
const dataOptions = dataTimeConvert ? JSON.stringify(options) : '';
---

<text data-datetime={date.toISOString()} data-datelocal-options={dataOptions} {...attrs}>
	{formatted}
</text>

<script src="@scripts/datelocal-format.js"></script>
